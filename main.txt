import cv2
import numpy as np
from ultralytics import YOLO

# Load YOLOv11 model
model = YOLO('yolo11n.pt')

# Load the video
cap = cv2.VideoCapture('your_video.mp4')

# Define the color range for the green mask (adjust these values as needed)
lower_green = np.array([35, 100, 100])   # HSV lower bound
upper_green = np.array([85, 255, 255])   # HSV upper bound

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Convert the frame to HSV color space
    hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    # Create a binary mask where green regions are white
    mask = cv2.inRange(hsv_frame, lower_green, upper_green)

    # Apply the mask to keep only the green areas
    masked_frame = cv2.bitwise_and(frame, frame, mask=mask)

    # Run YOLO only on the masked frame
    results = model(masked_frame)

    # Optional: Display the original frame and the masked frame
    cv2.imshow('Original Frame', frame)
    cv2.imshow('Masked Frame (Green Area)', masked_frame)

    # Press 'q' to quit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
